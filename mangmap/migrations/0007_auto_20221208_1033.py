# Generated by Django 3.2.16 on 2022-12-08 09:33

import datetime
from django.db import migrations, models
import django.db.models.deletion
import uuid
import wagtail.blocks
import wagtail.documents.blocks
import wagtail.fields
import wagtail.images.blocks
import wagtail.search.index


class Migration(migrations.Migration):

    dependencies = [
        ('wagtailimages', '0024_index_image_file_hash'),
        ('wagtaildocs', '0012_uploadeddocument'),
        ('wagtailcore', '0078_referenceindex'),
        ('mangmap', '0006_auto_20221208_1031'),
    ]

    operations = [
        migrations.CreateModel(
            name='ActualityType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
                ('slug', models.SlugField(allow_unicode=True, max_length=100, unique=True, verbose_name='slug')),
                ('translation_key', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('locale', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='wagtailcore.locale')),
            ],
            options={
                'verbose_name': "Type d'actualité",
                'verbose_name_plural': "Types d'actualité",
                'ordering': ('name',),
                'abstract': False,
                'unique_together': {('translation_key', 'locale')},
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('translation_key', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('name', models.CharField(max_length=60, verbose_name='Nom')),
                ('code', models.CharField(max_length=20, verbose_name='code à deux lettres')),
                ('latitude', models.FloatField(verbose_name='latitude du centre')),
                ('longitude', models.FloatField(verbose_name='longitude du centre')),
                ('locale', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='wagtailcore.locale')),
            ],
            options={
                'verbose_name': 'pays',
                'verbose_name_plural': 'pays',
                'ordering': ('zone__name', 'name'),
                'abstract': False,
            },
            bases=(models.Model, wagtail.search.index.Indexed),
        ),
        migrations.CreateModel(
            name='WorldZone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('translation_key', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('name', models.CharField(max_length=60, verbose_name='Nom')),
                ('code', models.CharField(max_length=20, verbose_name='code (ne pas changer !)')),
                ('latitude', models.FloatField(verbose_name='latitude du centre')),
                ('longitude', models.FloatField(verbose_name='longitude du centre')),
                ('icon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wagtaildocs.document')),
                ('locale', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='wagtailcore.locale')),
            ],
            options={
                'verbose_name': 'zone du monde',
                'verbose_name_plural': 'zones du monde',
                'ordering': ('name',),
                'abstract': False,
                'unique_together': {('translation_key', 'locale')},
            },
        ),
        migrations.CreateModel(
            name='Thematic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
                ('slug', models.SlugField(allow_unicode=True, max_length=100, unique=True, verbose_name='slug')),
                ('translation_key', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('icon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wagtaildocs.document')),
                ('locale', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='wagtailcore.locale')),
            ],
            options={
                'verbose_name': 'Thématique',
                'verbose_name_plural': 'Thématiques',
                'abstract': False,
                'unique_together': {('translation_key', 'locale')},
            },
        ),
        migrations.CreateModel(
            name='SiteType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
                ('slug', models.SlugField(allow_unicode=True, max_length=100, unique=True, verbose_name='slug')),
                ('translation_key', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('locale', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='wagtailcore.locale')),
            ],
            options={
                'verbose_name': 'Type de site',
                'verbose_name_plural': 'Types de site',
                'ordering': ('name',),
                'abstract': False,
                'unique_together': {('translation_key', 'locale')},
            },
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('translation_key', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('body', wagtail.fields.StreamField([('heading', wagtail.blocks.CharBlock(form_classname='full title', label='Titre de la page')), ('section', wagtail.blocks.StructBlock([('paragraph', wagtail.blocks.RichTextBlock(features=['bold', 'italic', 'link', 'h3', 'h4', 'ol', 'ul', 'h2'], label='Contenu', required=True)), ('color', wagtail.blocks.ChoiceBlock(choices=[('blue-light', 'Bleue'), ('secondary-light', 'Rose'), ('white', 'Blanche'), ('', 'Sans couleur')], help_text='Couleur de fond', label='couleur', required=False)), ('image', wagtail.images.blocks.ImageChooserBlock(label='Image à côté du paragraphe', required=False)), ('position', wagtail.blocks.ChoiceBlock(choices=[('right', 'Droite'), ('left', 'Gauche')], help_text="Position de l'image", required=False)), ('sub_section', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('color', wagtail.blocks.ChoiceBlock(choices=[('blue-light', 'Bleue'), ('secondary-light', 'Rose'), ('white', 'Blanche'), ('', 'Sans couleur')], help_text='Couleur de fond', label='couleur', required=False)), ('paragraph', wagtail.blocks.RichTextBlock(features=['bold', 'italic', 'link', 'h3', 'h4', 'ol', 'ul'], label='Contenu', required=False)), ('columns', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('color', wagtail.blocks.ChoiceBlock(choices=[('blue-light', 'Bleue'), ('secondary-light', 'Rose'), ('white', 'Blanche'), ('', 'Sans couleur')], help_text='Couleur de fond', label='couleur', required=False)), ('paragraph', wagtail.blocks.RichTextBlock(features=['bold', 'italic', 'link', 'h3', 'h4', 'ol', 'ul'], label='Contenu', required=False))], label='Colonne'), label='Colonnes'))], label='Sous section'), default=[], label='Sous sections'))], label='Section')), ('image', wagtail.images.blocks.ImageChooserBlock()), ('pdf', wagtail.documents.blocks.DocumentChooserBlock())], blank=True, help_text='Corps de la page', use_json_field=True, verbose_name='Contenu')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateField(auto_now=True)),
                ('name', models.CharField(max_length=100, verbose_name='Nom')),
                ('slug', models.SlugField(blank=True, default='', help_text="ce champ est rempli automatiquement s'il est laissé vide", max_length=100, unique=True, verbose_name='Slug (URL de la site)')),
                ('geo_dev_creation', models.BooleanField(default=False, verbose_name='Créé par mangmap ?')),
                ('source_name', models.CharField(blank=True, max_length=100, verbose_name='Producteur de la site')),
                ('source_link', models.CharField(blank=True, max_length=200, verbose_name='Lien vers la Site (URL)')),
                ('file', models.FileField(blank=True, help_text="S'il est défini, le lien vers la source est ignoré", null=True, upload_to='', verbose_name='Fichier source')),
                ('short_description', wagtail.fields.RichTextField(blank=True, max_length=1000, null=True, verbose_name='Description courte')),
                ('countries', models.ManyToManyField(blank=True, to='mangmap.Country', verbose_name='Pays')),
                ('locale', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='wagtailcore.locale')),
                ('main_thematic', models.ForeignKey(blank=True, help_text="ce champ n'est utilisé que lorsque plusieurs thématiques sont sélectionnées", null=True, on_delete=django.db.models.deletion.SET_NULL, to='mangmap.thematic', verbose_name='Thématique principale')),
                ('thematics', models.ManyToManyField(blank=True, related_name='sites', to='mangmap.Thematic', verbose_name='Thématiques')),
                ('types', models.ManyToManyField(blank=True, to='mangmap.SiteType')),
                ('zones', models.ManyToManyField(blank=True, to='mangmap.WorldZone', verbose_name='Zones')),
            ],
            options={
                'verbose_name': 'Site',
                'verbose_name_plural': 'Sites',
                'ordering': ('name',),
                'abstract': False,
                'unique_together': {('translation_key', 'locale')},
            },
            bases=(wagtail.search.index.Indexed, models.Model),
        ),
        migrations.AddField(
            model_name='country',
            name='zone',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='mangmap.worldzone'),
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('translation_key', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('body', wagtail.fields.StreamField([('heading', wagtail.blocks.CharBlock(form_classname='full title', label='Titre de la page')), ('section', wagtail.blocks.StructBlock([('paragraph', wagtail.blocks.RichTextBlock(features=['bold', 'italic', 'link', 'h3', 'h4', 'ol', 'ul', 'h2'], label='Contenu', required=True)), ('color', wagtail.blocks.ChoiceBlock(choices=[('blue-light', 'Bleue'), ('secondary-light', 'Rose'), ('white', 'Blanche'), ('', 'Sans couleur')], help_text='Couleur de fond', label='couleur', required=False)), ('image', wagtail.images.blocks.ImageChooserBlock(label='Image à côté du paragraphe', required=False)), ('position', wagtail.blocks.ChoiceBlock(choices=[('right', 'Droite'), ('left', 'Gauche')], help_text="Position de l'image", required=False)), ('sub_section', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('color', wagtail.blocks.ChoiceBlock(choices=[('blue-light', 'Bleue'), ('secondary-light', 'Rose'), ('white', 'Blanche'), ('', 'Sans couleur')], help_text='Couleur de fond', label='couleur', required=False)), ('paragraph', wagtail.blocks.RichTextBlock(features=['bold', 'italic', 'link', 'h3', 'h4', 'ol', 'ul'], label='Contenu', required=False)), ('columns', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('color', wagtail.blocks.ChoiceBlock(choices=[('blue-light', 'Bleue'), ('secondary-light', 'Rose'), ('white', 'Blanche'), ('', 'Sans couleur')], help_text='Couleur de fond', label='couleur', required=False)), ('paragraph', wagtail.blocks.RichTextBlock(features=['bold', 'italic', 'link', 'h3', 'h4', 'ol', 'ul'], label='Contenu', required=False))], label='Colonne'), label='Colonnes'))], label='Sous section'), default=[], label='Sous sections'))], label='Section')), ('image', wagtail.images.blocks.ImageChooserBlock()), ('pdf', wagtail.documents.blocks.DocumentChooserBlock())], blank=True, help_text='Corps de la page', use_json_field=True, verbose_name='Contenu')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateField(auto_now=True)),
                ('name', models.CharField(max_length=255, verbose_name='nom')),
                ('publication_date', models.DateTimeField(default=datetime.datetime.now, help_text="Permet de trier l'ordre d'affichage dans la page des actualités", verbose_name='Date de publication')),
                ('slug', models.SlugField(blank=True, default='', help_text="ce champ est rempli automatiquement s'il est laissé vide", max_length=100, unique=True, verbose_name="Slug (URL de l'actualité)")),
                ('introduction', wagtail.fields.RichTextField(max_length=250)),
                ('is_mangmap', models.BooleanField(default=False, help_text="La première actualité mise en avant sur la page d'accueil est la dernière actualité mangmap", verbose_name='Est une nouvelle mangmap')),
                ('is_global', models.BooleanField(default=False, verbose_name='Concerne tous les pays')),
                ('countries', models.ManyToManyField(blank=True, help_text="Ce champ n'est pas encore utilisé", to='mangmap.Country', verbose_name='Pays liés')),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Miniature')),
                ('locale', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='wagtailcore.locale')),
                ('sites', models.ManyToManyField(blank=True, to='mangmap.Site', verbose_name='Sites concernés')),
                ('thematics', models.ManyToManyField(blank=True, help_text="Ce champ n'est pas encore utilisé", to='mangmap.Thematic', verbose_name='Thématiques liées')),
                ('types', models.ManyToManyField(blank=True, help_text='Permet le filtrage des actualités', related_name='news', to='mangmap.ActualityType', verbose_name='Type')),
                ('zones', models.ManyToManyField(blank=True, help_text="Ce champ n'est pas encore utilisé", to='mangmap.WorldZone', verbose_name='Zones du monde liées')),
            ],
            options={
                'verbose_name': 'Actualité',
                'verbose_name_plural': 'Actualités',
                'ordering': ['-publication_date'],
                'abstract': False,
                'unique_together': {('translation_key', 'locale')},
            },
            bases=(wagtail.search.index.Indexed, models.Model),
        ),
        migrations.AlterUniqueTogether(
            name='country',
            unique_together={('translation_key', 'locale')},
        ),
    ]
